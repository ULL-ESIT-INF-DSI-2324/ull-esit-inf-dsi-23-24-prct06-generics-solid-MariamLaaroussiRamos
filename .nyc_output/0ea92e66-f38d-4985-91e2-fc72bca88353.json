{"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1-pe.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1-pe.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":30}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"5":{"start":{"line":19,"column":22},"end":{"line":19,"column":46}},"6":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":40}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":33}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":52}},"10":{"start":{"line":31,"column":8},"end":{"line":31,"column":56}},"11":{"start":{"line":31,"column":41},"end":{"line":31,"column":54}},"12":{"start":{"line":34,"column":0},"end":{"line":34,"column":66}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":62}},"14":{"start":{"line":37,"column":41},"end":{"line":37,"column":60}},"15":{"start":{"line":40,"column":0},"end":{"line":40,"column":64}},"16":{"start":{"line":41,"column":26},"end":{"line":41,"column":59}},"17":{"start":{"line":42,"column":0},"end":{"line":42,"column":29}},"18":{"start":{"line":43,"column":0},"end":{"line":43,"column":29}},"19":{"start":{"line":44,"column":0},"end":{"line":44,"column":29}},"20":{"start":{"line":45,"column":0},"end":{"line":45,"column":29}},"21":{"start":{"line":46,"column":0},"end":{"line":46,"column":29}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":29}},"23":{"start":{"line":48,"column":0},"end":{"line":48,"column":29}},"24":{"start":{"line":49,"column":0},"end":{"line":49,"column":41}},"25":{"start":{"line":50,"column":25},"end":{"line":50,"column":57}},"26":{"start":{"line":51,"column":0},"end":{"line":51,"column":30}},"27":{"start":{"line":52,"column":0},"end":{"line":52,"column":31}},"28":{"start":{"line":53,"column":0},"end":{"line":53,"column":32}},"29":{"start":{"line":54,"column":0},"end":{"line":54,"column":32}},"30":{"start":{"line":55,"column":0},"end":{"line":55,"column":31}},"31":{"start":{"line":56,"column":0},"end":{"line":56,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":28},"end":{"line":11,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":19},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":21},"end":{"line":23,"column":5}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":23},"end":{"line":26,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":17},"end":{"line":32,"column":5}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":33},"end":{"line":31,"column":34}},"loc":{"start":{"line":31,"column":41},"end":{"line":31,"column":54}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":17},"end":{"line":38,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":37,"column":33},"end":{"line":37,"column":34}},"loc":{"start":{"line":37,"column":41},"end":{"line":37,"column":60}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":26}},"type":"default-arg","locations":[{"start":{"line":9,"column":24},"end":{"line":9,"column":26}}],"line":9},"1":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20}},"s":{"0":1,"1":1,"2":10,"3":60,"4":2,"5":2,"6":2,"7":2,"8":4,"9":1,"10":2,"11":14,"12":1,"13":2,"14":10,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"f":{"0":10,"1":60,"2":2,"3":2,"4":4,"5":2,"6":14,"7":2,"8":10},"b":{"0":[10],"1":[2,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1-pe.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1-pe.ts"],"names":[],"mappings":";;;AAgBA,wIAAwI;AACxI,sJAAsJ;AACtJ,gIAAgI;AAChI,MAAsB,oBAAoB;IAC9B,KAAK,CAAM;IAErB,YAAY,QAAa,EAAE;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,IAAO;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,IAAO;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;CAGF;AA3BD,oDA2BC;AAGD,MAAa,2BAA4B,SAAQ,oBAA4B;IAC3E,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAClD,CAAC;CACF;AAJD,kEAIC;AAED,MAAa,0BAA2B,SAAQ,oBAA4B;IAC1E,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD,CAAC;CACF;AAJD,gEAIC;AAED,MAAM,iBAAiB,GAAG,IAAI,2BAA2B,EAAE,CAAC;AAC5D,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7B,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAG7B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB;AAE3D,MAAM,gBAAgB,GAAG,IAAI,0BAA0B,EAAE,CAAC;AAC1D,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9B,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC/B,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAG/B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,+BAA+B","sourcesContent":["// Implemente una interfaz genérica 'Collectable' con los siguientes métodos, los cuales deberá definir toda clase que quiera implementar dicha interfaz: \n// addItem, getItem, removeItem, getNumberOfItems.\nexport interface Collectable<T> {\n  addItem(newItem: T): void;\n  getItem(index: number): T | undefined;\n  removeItem(item: T): void;\n  getNumberOfItems(): number;\n}\n\n// Implemente una interfaz genérica 'Searchable' con los siguientes métodos, los cuales deberá definir toda clase que desee implementar dicha interfaz: search. \n// Este método recibirá un término de búsqueda cuyo tipo no se conoce a priori.\n\nexport interface Searchable<T> {\n  search(term: T): T[];\n}\n\n// Implemente una clase abstracta genérica 'SearchableCollection' que implemente las interfaces genéricas 'Collectable' y 'Searchable'. \n// Tenga en cuenta que en este punto deberá implementar todos los metodos de la interfaz 'Collectable', mientras que el método search de 'Searchable' \n// será abstracto, de modo que aquellas clases que extiendan a 'SearchableCollection' tengan que implementarlo obligatoriamente.\nexport abstract class SearchableCollection<T> implements Collectable<T>, Searchable<T> {\n  protected items: T[];\n\n  constructor(items: T[] = []) {\n    this.items = items;\n  }\n\n  addItem(item: T): void {\n    this.items.push(item);\n  }\n\n  getItem(index: number): T | undefined {\n    return this.items[index];\n  }\n\n  removeItem(item: T): void {\n    const index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n    }\n  }\n\n  getNumberOfItems(): number {\n    return this.items.length;\n  }\n\n  abstract search(term: T): T[];\n}\n\n\nexport class NumericSearchableCollection extends SearchableCollection<number> {\n  search(term: number): number[] {\n    return this.items.filter(item => item === term);\n  }\n}\n\nexport class StringSearchableCollection extends SearchableCollection<string> {\n  search(term: string): string[] {\n    return this.items.filter(item => item.includes(term));\n  }\n}\n\nconst numericCollection = new NumericSearchableCollection();\nnumericCollection.addItem(1);\nnumericCollection.addItem(2);\nnumericCollection.addItem(3);\nnumericCollection.addItem(1);\nnumericCollection.addItem(4);\nnumericCollection.addItem(2);\nnumericCollection.addItem(2);\n\n\nconsole.log(numericCollection.search(1)); // Output: [1, 1]\n\nconst stringCollection = new StringSearchableCollection();\nstringCollection.addItem(\"a\");\nstringCollection.addItem(\"ab\");\nstringCollection.addItem(\"abc\");\nstringCollection.addItem(\"acd\");\nstringCollection.addItem(\"bc\");\n\n\nconsole.log(stringCollection.search(\"a\")); // Output: [\"banana\", \"orange\"]\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fafcfc1ee3cd4d6cb441ddb94a8275759d39f2cc","contentHash":"14f6c9a277e6f1ebd0e6ef2a1c2cc841f552ceaa3381c9876f4dd3f03b859117"},"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":69}},"2":{"start":{"line":9,"column":14},"end":{"line":9,"column":16}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":61}},"5":{"start":{"line":22,"column":48},"end":{"line":22,"column":59}},"6":{"start":{"line":28,"column":8},"end":{"line":28,"column":45}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":65}},"8":{"start":{"line":29,"column":38},"end":{"line":29,"column":63}},"9":{"start":{"line":37,"column":8},"end":{"line":37,"column":67}},"10":{"start":{"line":37,"column":42},"end":{"line":37,"column":65}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":20}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":29}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":42}},"14":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"15":{"start":{"line":60,"column":0},"end":{"line":60,"column":32}},"16":{"start":{"line":62,"column":29},"end":{"line":62,"column":39}},"17":{"start":{"line":63,"column":0},"end":{"line":63,"column":67}},"18":{"start":{"line":64,"column":0},"end":{"line":64,"column":65}},"19":{"start":{"line":65,"column":23},"end":{"line":65,"column":33}},"20":{"start":{"line":66,"column":0},"end":{"line":66,"column":56}},"21":{"start":{"line":67,"column":0},"end":{"line":67,"column":55}},"22":{"start":{"line":69,"column":23},"end":{"line":69,"column":69}},"23":{"start":{"line":70,"column":0},"end":{"line":76,"column":1}},"24":{"start":{"line":71,"column":4},"end":{"line":71,"column":55}},"25":{"start":{"line":72,"column":4},"end":{"line":72,"column":100}},"26":{"start":{"line":75,"column":4},"end":{"line":75,"column":55}},"27":{"start":{"line":78,"column":0},"end":{"line":78,"column":61}},"28":{"start":{"line":79,"column":0},"end":{"line":79,"column":39}},"29":{"start":{"line":80,"column":0},"end":{"line":80,"column":60}},"30":{"start":{"line":81,"column":0},"end":{"line":81,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":24},"end":{"line":16,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":25},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":43},"end":{"line":22,"column":44}},"loc":{"start":{"line":22,"column":48},"end":{"line":22,"column":59}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":22},"end":{"line":30,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":29},"end":{"line":29,"column":30}},"loc":{"start":{"line":29,"column":38},"end":{"line":29,"column":63}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":28},"end":{"line":38,"column":5}},"line":36},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":33},"end":{"line":37,"column":34}},"loc":{"start":{"line":37,"column":42},"end":{"line":37,"column":65}},"line":37},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":24},"end":{"line":48,"column":5}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":24},"end":{"line":58,"column":5}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":70,"column":0},"end":{"line":76,"column":1}},"type":"if","locations":[{"start":{"line":70,"column":0},"end":{"line":76,"column":1}},{"start":{"line":70,"column":0},"end":{"line":76,"column":1}}],"line":70}},"s":{"0":1,"1":1,"2":12,"3":8,"4":3,"5":3,"6":4,"7":4,"8":5,"9":3,"10":3,"11":1,"12":7,"13":1,"14":2,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1},"f":{"0":8,"1":3,"2":3,"3":4,"4":5,"5":3,"6":3,"7":7,"8":2},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-1.ts"],"names":[],"mappings":";;;AAOA;;;GAGG;AACH,MAAa,IAAI;IACP,OAAO,GAAQ,EAAE,CAAC;IAE1B;;;OAGG;IACH,YAAY,CAAC,KAAQ;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,KAAQ;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,MAAc;QAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;IAC7D,CAAC;CACF;AAnCD,oBAmCC;AAED;;GAEG;AACH,MAAa,eAAe;IACP;IAAnB,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;CACtC;AAFD,0CAEC;AAED;;GAEG;AACH,MAAa,UAAU;IACF;IAAnB,YAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;CACtC;AAFD,gCAEC;AAED,iBAAiB;AACjB,MAAM,oBAAoB,GAAG,IAAI,IAAI,EAAmB,CAAC;AACzD,oBAAoB,CAAC,YAAY,CAAC,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;AACnE,oBAAoB,CAAC,YAAY,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEjE,MAAM,cAAc,GAAG,IAAI,IAAI,EAAc,CAAC;AAC9C,cAAc,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;AACxD,cAAc,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AAEvD,wEAAwE;AACxE,MAAM,cAAc,GAAG,oBAAoB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AACtE,IAAI,cAAc,EAAE,CAAC;IACnB,oBAAoB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACnD,OAAO,CAAC,GAAG,CAAC,uBAAuB,cAAc,CAAC,MAAM,sCAAsC,CAAC,CAAC;AAClG,CAAC;KAAM,CAAC;IACN,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;AACrD,CAAC;AAED,mCAAmC;AACnC,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;AAC7D,oBAAoB,CAAC,eAAe,EAAE,CAAC;AAEvC,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;AAC5D,cAAc,CAAC,eAAe,EAAE,CAAC","sourcesContent":["/**\n * Interfaz para los enseres.\n */\nexport interface Enser {\n  nombre: string;\n}\n\n/**\n * Clase genérica para representar una caja que puede contener enseres.\n * @template T - Tipo de enser que contendrá la caja.\n */\nexport class Caja<T extends Enser> {\n  private enseres: T[] = [];\n\n  /**\n   * Método para añadir un enser a la caja.\n   * @param enser - Enser a añadir.\n   */\n  agregarEnser(enser: T): void {\n    this.enseres.push(enser);\n  }\n\n  /**\n   * Método para eliminar un enser de la caja.\n   * @param enser - Enser a eliminar.\n   */\n  eliminarEnser(enser: T): void {\n    this.enseres = this.enseres.filter(e => e !== enser);\n  }\n\n  /**\n   * Método para listar el contenido de la caja por consola.\n   */\n  listarContenido(): void {\n    console.log(\"Contenido de la caja:\");\n    this.enseres.forEach(enser => console.log(enser.nombre));\n  }\n\n  /**\n   * Método para buscar un enser por nombre.\n   * @param nombre - Nombre del enser a buscar.\n   * @returns El enser encontrado o undefined si no se encuentra.\n   */\n  buscarPorNombre(nombre: string): T | undefined {\n    return this.enseres.find(enser => enser.nombre === nombre);\n  }\n}\n\n/**\n * Clase para representar utensilios de cocina.\n */\nexport class UtensilioCocina implements Enser {\n  constructor(public nombre: string) {}\n}\n\n/**\n * Clase para representar cosas de habitación.\n */\nexport class Habitacion implements Enser {\n  constructor(public nombre: string) {}\n}\n\n// Ejemplo de uso\nconst cajaUtensiliosCocina = new Caja<UtensilioCocina>();\ncajaUtensiliosCocina.agregarEnser(new UtensilioCocina(\"Cuchillo\"));\ncajaUtensiliosCocina.agregarEnser(new UtensilioCocina(\"Sartén\"));\n\nconst cajahabitacion = new Caja<Habitacion>();\ncajahabitacion.agregarEnser(new Habitacion(\"Almohada\"));\ncajahabitacion.agregarEnser(new Habitacion(\"Lámpara\"));\n\n// Ejemplo de eliminación de un enser de la caja de utensilios de cocina\nconst enserAEliminar = cajaUtensiliosCocina.buscarPorNombre(\"Sartén\");\nif (enserAEliminar) {\n  cajaUtensiliosCocina.eliminarEnser(enserAEliminar);\n  console.log(`Se eliminó el enser ${enserAEliminar.nombre} de la caja de utensilios de cocina.`);\n} else {\n  console.log(\"No se encontró el enser a eliminar.\");\n}\n\n// Listar el contenido de cada caja\nconsole.log(\"Contenido de la caja de utensilios de cocina:\");\ncajaUtensiliosCocina.listarContenido();\n\nconsole.log(\"Contenido de la caja de cosas de habitación:\");\ncajahabitacion.listarContenido();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b12524f5bbc2ecf34490f8335fb4e365ac36d1a0","contentHash":"18d19acb63feece4d7790de2d86a4bdbedeeff847f7825be4cd757d3a438fd53"},"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-2.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-2.ts","statementMap":{"0":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":72}},"2":{"start":{"line":18,"column":8},"end":{"line":18,"column":31}},"3":{"start":{"line":19,"column":8},"end":{"line":19,"column":27}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":26}},"5":{"start":{"line":32,"column":8},"end":{"line":32,"column":79}},"6":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"7":{"start":{"line":45,"column":8},"end":{"line":45,"column":119}},"8":{"start":{"line":48,"column":0},"end":{"line":48,"column":38}},"9":{"start":{"line":50,"column":16},"end":{"line":50,"column":51}},"10":{"start":{"line":52,"column":21},"end":{"line":52,"column":39}},"11":{"start":{"line":53,"column":19},"end":{"line":53,"column":55}},"12":{"start":{"line":54,"column":0},"end":{"line":54,"column":24}},"13":{"start":{"line":56,"column":22},"end":{"line":56,"column":41}},"14":{"start":{"line":57,"column":20},"end":{"line":57,"column":57}},"15":{"start":{"line":58,"column":0},"end":{"line":58,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":32},"end":{"line":20,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":28},"end":{"line":33,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":28},"end":{"line":46,"column":5}},"line":43}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":3,"4":1,"5":2,"6":1,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{"0":3,"1":2,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-2.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-2.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAYH,0CAA0C;AAC1C,MAAa,OAAO;IAMC;IAAwB;IAL3C;;;;OAIG;IACH,YAAmB,OAAe,EAAS,KAAa;QAArC,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;CAC7D;AAPD,0BAOC;AAED,sDAAsD;AACtD,MAAa,YAAY;IACvB;;;;OAIG;IACH,cAAc,CAAC,OAAgB;QAC7B,wDAAwD;QACxD,OAAO,oBAAoB,OAAO,CAAC,OAAO,aAAa,OAAO,CAAC,KAAK,EAAE,CAAC;IACzE,CAAC;CACF;AAVD,oCAUC;AAED,uDAAuD;AACvD,MAAa,aAAa;IACxB;;;;OAIG;IACH,cAAc,CAAC,OAAgB;QAC7B,yDAAyD;QACzD,OAAO,qCAAqC,OAAO,CAAC,OAAO,kBAAkB,OAAO,CAAC,KAAK,oBAAoB,CAAC;IACjH,CAAC;CACF;AAVD,sCAUC;AAED,iBAAiB;AACjB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;AAEpD,iCAAiC;AACjC,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AACxC,MAAM,UAAU,GAAG,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACxD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAExB,kCAAkC;AAClC,MAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AAC1C,MAAM,WAAW,GAAG,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAC1D,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC","sourcesContent":["/**\n * Con este diseño, podría agregar nuevos formatos de generación de facturas, creando nuevas clases que implementen la interfaz GeneradorFacturas,\n * sin necesidad de modificar el código. Esto cumple con el Principio de Open/Closed (OCP) de SOLID.\n */\n\n// Interfaz para la generación de facturas\nexport interface GeneradorFacturas {\n  /**\n   * Genera una factura en el formato especificado.\n   * @param factura - La factura a generar.\n   * @returns La factura generada como una cadena de texto.\n   */\n  generarFactura(factura: Factura): string;\n}\n\n// Clase base para representar una factura\nexport class Factura {\n  /**\n   * Constructor de la clase Factura.\n   * @param cliente - El cliente al que se emite la factura.\n   * @param total - El monto total de la factura.\n   */\n  constructor(public cliente: string, public total: number) {}\n}\n\n// Clase para la generación de facturas en formato PDF\nexport class GeneradorPDF implements GeneradorFacturas {\n  /**\n   * Genera una factura en formato PDF.\n   * @param factura - La factura a generar.\n   * @returns La factura generada en formato PDF.\n   */\n  generarFactura(factura: Factura): string {\n    // Implementación para generar la factura en formato PDF\n    return `Factura PDF para ${factura.cliente} - Total: ${factura.total}`;\n  }\n}\n\n// Clase para la generación de facturas en formato HTML\nexport class GeneradorHTML implements GeneradorFacturas {\n  /**\n   * Genera una factura en formato HTML.\n   * @param factura - La factura a generar.\n   * @returns La factura generada en formato HTML.\n   */\n  generarFactura(factura: Factura): string {\n    // Implementación para generar la factura en formato HTML\n    return `<html><body><h1>Factura HTML para ${factura.cliente}</h1><p>Total: ${factura.total}</p></body></html>`;\n  }\n}\n\n// Ejemplo de uso\nconst factura = new Factura(\"Cliente Ejemplo\", 100);\n\n// Generar factura en formato PDF\nconst generadorPDF = new GeneradorPDF();\nconst facturaPDF = generadorPDF.generarFactura(factura);\nconsole.log(facturaPDF);\n\n// Generar factura en formato HTML\nconst generadorHTML = new GeneradorHTML();\nconst facturaHTML = generadorHTML.generarFactura(factura);\nconsole.log(facturaHTML);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a7578d4c58974438ae20c23820c53c0717f7d18","contentHash":"c1c2e67aa45a0ec5bba304b2b20ab2cd2b64dd52b0d3e9c9672d17faa62cc5bf"},"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-3.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-3.ts","statementMap":{"0":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}},"2":{"start":{"line":16,"column":11},"end":{"line":16,"column":24}},"3":{"start":{"line":25,"column":8},"end":{"line":25,"column":33}},"4":{"start":{"line":32,"column":8},"end":{"line":39,"column":9}},"5":{"start":{"line":33,"column":28},"end":{"line":33,"column":67}},"6":{"start":{"line":34,"column":12},"end":{"line":34,"column":27}},"7":{"start":{"line":37,"column":12},"end":{"line":37,"column":70}},"8":{"start":{"line":38,"column":12},"end":{"line":38,"column":22}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":32}},"10":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"11":{"start":{"line":58,"column":8},"end":{"line":64,"column":9}},"12":{"start":{"line":59,"column":12},"end":{"line":59,"column":59}},"13":{"start":{"line":60,"column":12},"end":{"line":60,"column":57}},"14":{"start":{"line":63,"column":12},"end":{"line":63,"column":77}},"15":{"start":{"line":67,"column":0},"end":{"line":67,"column":32}},"16":{"start":{"line":69,"column":17},"end":{"line":69,"column":30}},"17":{"start":{"line":71,"column":19},"end":{"line":71,"column":43}},"18":{"start":{"line":72,"column":23},"end":{"line":72,"column":44}},"19":{"start":{"line":73,"column":0},"end":{"line":73,"column":48}},"20":{"start":{"line":75,"column":19},"end":{"line":75,"column":43}},"21":{"start":{"line":76,"column":16},"end":{"line":76,"column":66}},"22":{"start":{"line":77,"column":0},"end":{"line":77,"column":30}},"23":{"start":{"line":79,"column":23},"end":{"line":79,"column":44}},"24":{"start":{"line":80,"column":0},"end":{"line":80,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":26},"end":{"line":26,"column":5}},"line":24},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":15},"end":{"line":40,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":26},"end":{"line":52,"column":5}},"line":50},"3":{"name":"(anonymous_3)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":20},"end":{"line":65,"column":5}},"line":57}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":4,"5":4,"6":4,"7":0,"8":0,"9":1,"10":2,"11":2,"12":2,"13":2,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":3,"1":4,"2":2,"3":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-3.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-3.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;;AAEH,yBAAyB;AAEzB,oCAAoC;AACpC,MAAa,UAAU;IAKD;IAJpB;;;OAGG;IACH,YAAoB,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;IAAG,CAAC;IAExC;;;OAGG;IACI,QAAQ;QACb,IAAI,CAAC;YACH,MAAM,OAAO,GAAW,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAChE,OAAO,OAAO,CAAC;QACjB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;CACF;AApBD,gCAoBC;AAED,sCAAsC;AACtC,MAAa,UAAU;IAKD;IAJpB;;;OAGG;IACH,YAAoB,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;IAAG,CAAC;IAExC;;;OAGG;IACI,SAAS,CAAC,IAAY;QAC3B,IAAI,CAAC;YACH,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC/C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;CACF;AAnBD,gCAmBC;AAED,cAAc;AACd,MAAM,QAAQ,GAAG,aAAa,CAAC;AAE/B,kBAAkB;AAClB,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC5C,MAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;AAEhD,kBAAkB;AAClB,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC5C,MAAM,OAAO,GAAG,kDAAkD,CAAC;AACnE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAE9B,mBAAmB;AACnB,MAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC","sourcesContent":["/**\n * El código proporcionado viola el Principio de Responsabilidad Única (SRP) de SOLID. \n * Este principio establece que una clase debe tener una sola razón para cambiar, es decir, debe tener una sola responsabilidad.\n * \n * En el código proporcionado, la clase FileManager tiene la responsabilidad de leer archivos y escribir en ellos. \n * Sin embargo, estas son dos responsabilidades distintas y podrían cambiar por diferentes razones. Por ejemplo, las razones para cambiar \n * la lógica de lectura de archivos pueden ser diferentes de las razones para cambiar la lógica de escritura de archivos. \n * Por lo tanto, tener estas dos responsabilidades en la misma clase viola el principio SRP.\n * \n * Para mejorar el diseño y cumplir con el principio SRP, podemos separar las responsabilidades de lectura y escritura en clases separadas. \n * Aquí tienes un diseño alternativo que cumple con el principio SRP\n */\n\nimport * as fs from 'fs';\n\n// Clase para la lectura de archivos\nexport class FileReader {\n  /**\n   * Constructor de la clase FileReader.\n   * @param filePath - Ruta del archivo a leer.\n   */\n  constructor(private filePath: string) {}\n\n  /**\n   * Método para leer el contenido del archivo.\n   * @returns El contenido del archivo como una cadena de texto.\n   */\n  public readFile(): string {\n    try {\n      const content: string = fs.readFileSync(this.filePath, 'utf-8');\n      return content;\n    } catch (error) {\n      console.error('Error al leer el archivo:', error.message);\n      return '';\n    }\n  }\n}\n\n// Clase para la escritura de archivos\nexport class FileWriter {\n  /**\n   * Constructor de la clase FileWriter.\n   * @param filePath - Ruta del archivo en el que escribir.\n   */\n  constructor(private filePath: string) {}\n\n  /**\n   * Método para escribir datos en el archivo.\n   * @param data - Datos a escribir en el archivo.\n   */\n  public writeFile(data: string): void {\n    try {\n      fs.writeFileSync(this.filePath, data, 'utf-8');\n      console.log('Archivo escrito exitosamente.');\n    } catch (error) {\n      console.error('Error al escribir en el archivo:', error.message);\n    }\n  }\n}\n\n// Client code\nconst filePath = 'example.txt';\n\n// Reading content\nconst fileReader = new FileReader(filePath);\nconst currentContent = fileReader.readFile();\nconsole.log('Current content:', currentContent);\n\n// Writing content\nconst fileWriter = new FileWriter(filePath);\nconst newData = 'This is new content to be written into the file.';\nfileWriter.writeFile(newData);\n\n// Updating content\nconst updatedContent = fileReader.readFile();\nconsole.log('Updated content:', updatedContent);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7b5c79d3b64ede7fa2c1b7d4e7e5bc6f4a20d07b","contentHash":"1c49f9ea0fbde110f3deb3a8aacf4d5270d827870e149862825b0eed3096ff59"},"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-4.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-4.ts","statementMap":{"0":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":35}},"4":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"5":{"start":{"line":25,"column":23},"end":{"line":25,"column":43}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":23}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":11},"end":{"line":21,"column":5}},"line":19}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":1,"5":1,"6":1,"7":1},"f":{"0":2,"1":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-4.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-4.ts"],"names":[],"mappings":";AAAA;;;;;;;GAOG;;;AAsBH;;GAEG;AACH,MAAa,cAAc;IACzB,KAAK;QACH,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC7B,CAAC;CACF;AARD,wCAQC;AAED,cAAc;AACd,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAC5C,WAAW;AACX,cAAc,CAAC,KAAK,EAAE,CAAC;AACvB,WAAW;AACX,cAAc,CAAC,IAAI,EAAE,CAAC;AAGtB,kJAAkJ;AAClJ,4GAA4G","sourcesContent":["/**\n * Sí, el código propuesto no cumple el Principio de Segregación de Interfaces (ISP) de SOLID. \n * El motivo es que la interfaz PrintableScannable es demasiado genérica y obliga a todas las clases que la implementan \n * a proporcionar implementaciones para ambos métodos print() y scan(), incluso si una clase solo necesita uno de los dos métodos.\n * \n * Para corregir esto, podemos dividir la interfaz en dos interfaces más específicas, una para la funcionalidad de impresión\n * y otra para la funcionalidad de escaneo. Aquí tienes un diseño alternativo que cumple con los principios SOLID:\n */\n\n/**\n * Interfaz que define la funcionalidad de impresión.\n */\nexport interface Printable {\n  /**\n   * Método para imprimir.\n   */\n  print(): void;\n}\n\n/**\n * Interfaz que define la funcionalidad de escaneo.\n */\nexport interface Scannable {\n  /**\n   * Método para escanear.\n   */\n  scan(): void;\n}\n\n/**\n * Clase que implementa la funcionalidad de impresión y escaneo.\n */\nexport class PrinterScanner implements Printable, Scannable {\n  print(): void {\n    console.log('Printing...');\n  }\n\n  scan(): void {\n    console.log('Scanning...');\n  }\n}\n\n// Client code\nconst printerScanner = new PrinterScanner();\n// Printing\nprinterScanner.print();\n// Scanning\nprinterScanner.scan();\n\n\n// Con este diseño, cada clase implementa una interfaz específica que contiene solo los métodos necesarios para su funcionalidad correspondiente. \n// Esto hace que el código sea más cohesivo y sigue el Principio de Segregación de Interfaces (ISP) de SOLID\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"072a4f54d9d9aba5b170c1d22edada1764f2339e","contentHash":"dbb72498918cfde93c4459dd8924f8d7f68942bf96410c96e05ec19baeab42a6"},"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-5.ts":{"path":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-5.ts","statementMap":{"0":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":79}},"2":{"start":{"line":20,"column":8},"end":{"line":20,"column":65}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"4":{"start":{"line":33,"column":8},"end":{"line":33,"column":63}},"5":{"start":{"line":36,"column":0},"end":{"line":36,"column":50}},"6":{"start":{"line":47,"column":8},"end":{"line":47,"column":55}},"7":{"start":{"line":54,"column":8},"end":{"line":54,"column":49}},"8":{"start":{"line":57,"column":0},"end":{"line":57,"column":28}},"9":{"start":{"line":59,"column":22},"end":{"line":59,"column":54}},"10":{"start":{"line":60,"column":0},"end":{"line":60,"column":47}},"11":{"start":{"line":61,"column":29},"end":{"line":61,"column":68}},"12":{"start":{"line":62,"column":0},"end":{"line":62,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":20},"end":{"line":21,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":20},"end":{"line":34,"column":5}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":37},"end":{"line":48,"column":5}},"line":46},"3":{"name":"(anonymous_3)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":30},"end":{"line":55,"column":5}},"line":53}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":1,"1":1,"2":4,"3":4},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-5.ts","sources":["/home/usuario/ull-esit-inf-dsi-23-24-prct06-generics-solid-MariamLaaroussiRamos/src/ejercicio-5.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAaH;;GAEG;AACH,MAAa,YAAY;IACvB;;;OAGG;IACH,MAAM,CAAC,OAAe;QACpB,OAAO,CAAC,GAAG,CAAC,kCAAkC,OAAO,EAAE,CAAC,CAAC;IAC3D,CAAC;CACF;AARD,oCAQC;AAED;;GAEG;AACH,MAAa,mBAAmB;IAC9B;;;OAGG;IACH,MAAM,CAAC,OAAe;QACpB,OAAO,CAAC,GAAG,CAAC,gCAAgC,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;CACF;AARD,kDAQC;AAED;;GAEG;AACH,MAAa,QAAQ;IAKC;IAJpB;;;OAGG;IACH,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IAEhE;;;OAGG;IACH,gBAAgB,CAAC,OAAe;QAC9B,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;CACF;AAdD,4BAcC;AAED,cAAc;AACd,MAAM,aAAa,GAAG,IAAI,QAAQ,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC;AACvD,aAAa,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAE/C,MAAM,oBAAoB,GAAG,IAAI,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AACrE,oBAAoB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAGtD;;GAEG","sourcesContent":["/**\n * Sí, el código propuesto no cumple el Principio de Inversión de Dependencias (DIP) de SOLID. La clase Notifier depende directamente de las implementaciones concretas EmailService y ShortMessageService, en lugar de depender de abstracciones.\n * Esto hace que Notifier esté fuertemente acoplado a estas implementaciones concretas, lo que dificulta la extensibilidad y la modificación del código en el futuro.\n * \n * Para mejorar el diseño y cumplir con el principio DIP, podemos introducir una interfaz común para los servicios de notificación y hacer que Notifier dependa de esta interfaz en lugar de las implementaciones concretas.\n * Aquí tienes un diseño alternativo que cumple con el principio DIP:\n */\n\n/**\n * Interface for notification services\n */\nexport interface NotificationService {\n  /**\n   * Sends a notification message.\n   * @param message - The message to send.\n   */\n  notify(message: string): void;\n}\n\n/**\n * Class that allows notifications by email to be sent\n */\nexport class EmailService implements NotificationService {\n  /**\n   * Sends a notification message by email.\n   * @param message - The message to send.\n   */\n  notify(message: string): void {\n    console.log(`Sending notification by email: ${message}`);\n  }\n}\n\n/**\n * Class that allows notifications by SMS to be sent\n */\nexport class ShortMessageService implements NotificationService {\n  /**\n   * Sends a notification message by SMS.\n   * @param message - The message to send.\n   */\n  notify(message: string): void {\n    console.log(`Sending notification by SMS: ${message}`);\n  }\n}\n\n/**\n * Class that makes use of different types of services to perform notifications\n */\nexport class Notifier {\n  /**\n   * Constructor of Notifier class.\n   * @param notificationService - The notification service to use.\n   */\n  constructor(private notificationService: NotificationService) {}\n\n  /**\n   * Sends a notification message using the provided notification service.\n   * @param message - The message to send.\n   */\n  sendNotification(message: string): void {\n    this.notificationService.notify(message);\n  }\n}\n\n// Client code\nconst emailNotifier = new Notifier(new EmailService());\nemailNotifier.sendNotification('Hello World!');\n\nconst shortMessageNotifier = new Notifier(new ShortMessageService());\nshortMessageNotifier.sendNotification('Hello World!');\n\n\n/* Con este diseño, Notifier depende de la interfaz NotificationService, lo que permite que pueda utilizar cualquier implementación que cumpla con esta interfaz sin necesidad de modificar el código de Notifier.\n Esto sigue el Principio de Inversión de Dependencias (DIP) de SOLID y hace que el código sea más flexible y fácil de mantener.\n */\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d8a033cc01e5601a491e16ed404dba3cbe69343b","contentHash":"022744a09bf80c479978168098adc042fc476b3daf6ed22089a74b6120a7ca46"}}